pipeline {
    agent {label 'AGENT-1'}
    environment { 
        PROJECT = 'EXPENSE'
        COMPONENT = 'BACKEND' 
        DEPLOY_TO = "production"
    }
    options {
        timeout(time: 30, unit: 'MINUTES')
        disableConcurrentBuilds()
        ansiColor('xterm')
    }
    parameters {
        choice(name: 'ACTION', choices: ['apply', 'destroy'], description: 'Select Action')
    }
    stages {
        stage('Init and Plan') {
            steps {
                withAWS(region: 'us-east-1', credentials: 'aws-creds') {
                    sh '''
                        cd 00-vpc
                        terraform init -reconfigure
                        terraform plan
                    '''
                }
            }
        }

        stage('Apply or Destroy') {
            input {
                message "Should we continue?"
                ok "Yes, we should."
            }
            steps {
                withAWS(region: 'us-east-1', credentials: 'aws-creds') {
                    sh '''
                        cd 00-vpc
                        terraform apply -auto-approve
                    '''
                }
            }
        }

        // stage('Trigger SG') {
        //     when {
        //         expression { params.ACTION == 'apply' }
        //     }
        //     steps {
        //         build job: '10-sg', parameters: [string(name: 'ACTION', value: "apply")], wait: false
        //     }
        // }
    }

    post {
        always {
            echo "This section runs always"
            deleteDir()
        }
        success {
            echo "This section runs when pipeline succeeds"
        }
        failure {
            echo "This section runs when pipeline fails"
        }
    }
}
